load("@bazel-erlang//:xref.bzl", "xref")
load("@bazel-erlang//:dialyze.bzl", "dialyze")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    "rabbitmq_integration_suite",
    "rabbitmq_lib",
)

APP_NAME = "rabbitmq_tracing"

APP_DESCRIPTION = "RabbitMQ message logging / tracing"

APP_MODULE = "rabbit_tracing_app"

APP_ENV = """[
	    {directory, "/var/tmp/rabbitmq-tracing"},
	    {username, <<"guest">>},
	    {password, <<"guest">>}
	  ]"""

BUILD_DEPS = [
    "//apps/amqp_client:bazel_erlang_lib",
    "//apps/rabbitmq_management_agent:bazel_erlang_lib",
]

DEPS = [
    "//apps/rabbit_common:bazel_erlang_lib",
    "//apps/rabbitmq_management:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "//apps/rabbit:bazel_erlang_lib",
]

rabbitmq_lib(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    build_deps = BUILD_DEPS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

xref(tags = ["xref"])

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = "//:base_plt",
    tags = ["dialyze"],
)

broker_for_integration_suites()

PACKAGE = "apps/rabbitmq_tracing"

suites = [
    rabbitmq_integration_suite(
        PACKAGE,
        name = "rabbit_tracing_SUITE",
    ),
]

assert_suites(
    suites,
    glob(["test/**/*_SUITE.erl"]),
)
