load("@bazel-erlang//:xref.bzl", "xref")
load("@bazel-erlang//:dialyze.bzl", "dialyze")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    "rabbitmq_integration_suite",
    "rabbitmq_lib",
)

APP_NAME = "rabbitmq_stream"

APP_DESCRIPTION = "RabbitMQ Stream"

APP_MODULE = "rabbit_stream"

APP_ENV = """[
	{tcp_listeners, [5552]},
	{num_tcp_acceptors, 10},
	{tcp_listen_options, [{backlog,   128},
                          {nodelay,   true}]},
	{ssl_listeners, []},
	{num_ssl_acceptors, 10},
	{ssl_listen_options, []},
	{initial_credits, 50000},
	{credits_required_for_unblocking, 12500},
	{frame_max, 1048576},
	{heartbeat, 60},
	{advertised_host, undefined},
	{advertised_port, undefined}
]"""

BUILD_DEPS = [
    "//apps/rabbit_common:bazel_erlang_lib",
    "//apps/rabbitmq_cli:rabbitmqctl",
    "@ranch//:bazel_erlang_lib",
]

DEPS = [
    "//apps/rabbitmq_stream_common:bazel_erlang_lib",
    "//apps/rabbit:bazel_erlang_lib",
]

rabbitmq_lib(
    app_description = APP_DESCRIPTION,
    app_env = APP_ENV,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    build_deps = BUILD_DEPS,
    deps = DEPS,
)

xref(tags = ["xref"])

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = "//:base_plt",
    tags = ["dialyze"],
)

broker_for_integration_suites()

PACKAGE = "apps/rabbitmq_stream"

suites = [
    rabbitmq_integration_suite(
        PACKAGE,
        name = "commands_SUITE",
        additional_beam = [
            ":rabbit_stream_SUITE_beam_files",
        ],
        data = glob(["test/rabbit_stream_SUITE_data/**/*"]),
        flaky = True,
        deps = [
            "//apps/rabbitmq_stream_common:bazel_erlang_lib",
        ],
    ),
    rabbitmq_integration_suite(
        PACKAGE,
        name = "config_schema_SUITE",
    ),
    rabbitmq_integration_suite(
        PACKAGE,
        name = "rabbit_stream_SUITE",
        deps = [
            "//apps/rabbit:bazel_erlang_lib",
            "//apps/rabbitmq_stream_common:bazel_erlang_lib",
        ],
    ),
]

assert_suites(
    suites,
    glob(["test/**/*_SUITE.erl"]),
)
