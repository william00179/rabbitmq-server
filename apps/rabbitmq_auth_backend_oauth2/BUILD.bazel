load("@bazel-erlang//:bazel_erlang_lib.bzl", "erlc")
load("@bazel-erlang//:xref.bzl", "xref")
load("@bazel-erlang//:dialyze.bzl", "dialyze")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "RABBITMQ_TEST_ERLC_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    "rabbitmq_integration_suite",
    "rabbitmq_lib",
    "rabbitmq_suite",
)

APP_NAME = "rabbitmq_auth_backend_oauth2"

APP_DESCRIPTION = "OAuth 2 and JWT-based AuthN and AuthZ backend"

BUILD_DEPS = [
    "//deps/rabbit_common:bazel_erlang_lib",
    "//deps/rabbitmq_cli:rabbitmqctl",
]

DEPS = [
    "@jose//:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "//deps/rabbit:bazel_erlang_lib",
    "@base64url//:bazel_erlang_lib",
    "@cowlib//:bazel_erlang_lib",
]

rabbitmq_lib(
    app_description = APP_DESCRIPTION,
    app_name = APP_NAME,
    build_deps = BUILD_DEPS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

xref(tags = ["xref"])

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = "//:base_plt",
    tags = ["dialyze"],
)

broker_for_integration_suites()

erlc(
    name = "rabbit_auth_backend_oauth2_test_util",
    testonly = True,
    srcs = [
        "test/rabbit_auth_backend_oauth2_test_util.erl",
    ],
    dest = "test",
    erlc_opts = RABBITMQ_TEST_ERLC_OPTS,
)

PACKAGE = "deps/rabbitmq_auth_backend_oauth2"

suites = [
    rabbitmq_integration_suite(
        PACKAGE,
        name = "add_uaa_key_command_SUITE",
        size = "small",
    ),
    rabbitmq_integration_suite(
        PACKAGE,
        name = "config_schema_SUITE",
    ),
    rabbitmq_integration_suite(
        PACKAGE,
        name = "jwks_SUITE",
        additional_beam = [
            ":rabbit_auth_backend_oauth2_test_util",
        ],
        additional_srcs = [
            "test/jwks_http_app.erl",
            "test/jwks_http_handler.erl",
            "test/jwks_http_sup.erl",
        ],
        runtime_deps = [
            "@cowboy//:bazel_erlang_lib",
        ],
    ),
    rabbitmq_suite(
        name = "scope_SUITE",
        size = "small",
        deps = [
            "//deps/rabbit_common:bazel_erlang_lib",
        ],
    ),
    rabbitmq_integration_suite(
        PACKAGE,
        name = "system_SUITE",
        size = "small",
        additional_beam = [
            ":rabbit_auth_backend_oauth2_test_util",
        ],
    ),
    rabbitmq_integration_suite(
        PACKAGE,
        name = "unit_SUITE",
        size = "small",
        additional_beam = [
            ":rabbit_auth_backend_oauth2_test_util",
        ],
    ),
    rabbitmq_suite(
        name = "wildcard_match_SUITE",
        size = "small",
    ),
]

assert_suites(
    suites,
    glob(["test/**/*_SUITE.erl"]),
)
