load("@bazel-erlang//:xref.bzl", "xref")
load("@bazel-erlang//:dialyze.bzl", "dialyze", "plt")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "RABBITMQ_ERLC_OPTS",
    "RABBITMQ_TEST_ERLC_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    "rabbitmq_integration_suite",
    "rabbitmq_lib",
)

APP_NAME = "rabbitmq_peer_discovery_common"

APP_DESCRIPTION = "Modules shared by various peer discovery backends"

APP_MODULE = "rabbit_peer_discovery_common_app"

EXTRA_APPS = [
    "inets",
]

DEPS = [
    "//deps/rabbit_common:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "//deps/rabbit:bazel_erlang_lib",
]

ERLC_OPTS = RABBITMQ_ERLC_OPTS + [
    "-I deps/rabbitmq_peer_discovery_common",
]

TEST_ERLC_OPTS = RABBITMQ_TEST_ERLC_OPTS + [
    "-I deps/rabbitmq_peer_discovery_common",
]

rabbitmq_lib(
    app_description = APP_DESCRIPTION,
    app_module = APP_MODULE,
    app_name = APP_NAME,
    erlc_opts = ERLC_OPTS,
    extra_apps = EXTRA_APPS,
    test_erlc_opts = TEST_ERLC_OPTS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

xref(tags = ["xref"])

plt(
    name = "base_plt",
    apps = EXTRA_APPS,
    plt = "//:base_plt",
)

dialyze(
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":base_plt",
    tags = ["dialyze"],
)

broker_for_integration_suites()

PACKAGE = "deps/rabbitmq_peer_discovery_common"

suites = [
    rabbitmq_integration_suite(
        PACKAGE,
        name = "config_schema_SUITE",
    ),
]

assert_suites(
    suites,
    glob(["test/**/*_SUITE.erl"]),
)
